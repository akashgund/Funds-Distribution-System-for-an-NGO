/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces.StateAdmin;

import Business.Enterprize.Enterprize;
import Business.Enterprize.School;
import Business.Network.Network;
import Business.Users.UserAccount;
import Business.WorkQueue.Email;
import Business.WorkQueue.ManpowerRequest;
import Business.WorkQueue.ManpowerRequestQueue;
import Business.WorkQueue.VaccineWorkRequestQueue;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import Interfaces.SystemAdmin.*;
import Interfaces.*;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class ProcessRequests extends javax.swing.JPanel {

    /**
     * Creates new form LoginPage
     */
    JPanel userProcessContainer;
    UserAccount userAccount;
    Network network;
    private int outstanding;

    public ProcessRequests(JPanel container, UserAccount account, Network network) {
        initComponents();
        this.userProcessContainer = container;
        this.userAccount = account;
        this.network = network; //To change body of generated methods, choose Tools | Templates.
        //populateRequest();
    }

    public void update() {
        jTextField1.setText(String.valueOf(network.getTotal_funds()));
        jTextField2.setText(String.valueOf(outstanding));
    }

    public void populateRequest() {
        outstanding = 0;
        DefaultTableModel dtm = (DefaultTableModel) DisplayTable.getModel();
        dtm.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            if (!request.getGrantStatus().equalsIgnoreCase("completed")) {
                outstanding += request.getFundRequested();
            }
            Object row[] = new Object[5];
            row[0] = request.getFundType();
            row[1] = request;
            row[2] = request.getReceiver();
            row[3] = request.getFundRequested();
            row[4] = request.getGrantStatus();
            dtm.addRow(row);
        }
        update();

        //}
    }
    
    public void populateManpowerRequest()
    {
        DefaultTableModel dtm = (DefaultTableModel) DisplayTable.getModel();
        dtm.setRowCount(0);
        for(ManpowerRequest m : userAccount.getManPowerQueue().getManpwerWorkRequestQueue())
        {
            Object row[] = new Object[5];
            row[0] = m.getRequestType();
            row[1] = m;
            row[2] = m.getReceiver();
            row[3] = "Online Training";
            row[4] = m.getStatus();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        processRequest = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        DisplayTable = new javax.swing.JTable();
        loginButton4 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        processRequest1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        Panel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Resource Management");

        jLabel5.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Select Type :");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manpower", "Funds" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("n new Notifications");

        jLabel8.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Requests");

        processRequest.setBackground(new java.awt.Color(255, 0, 51));
        processRequest.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        processRequest.setForeground(new java.awt.Color(255, 255, 102));
        processRequest.setText("Generate Request");
        processRequest.setBorder(null);
        processRequest.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        processRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processRequestActionPerformed(evt);
            }
        });

        DisplayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Type", "Sender", "Receiver", "Details", "Status"
            }
        ));
        jScrollPane1.setViewportView(DisplayTable);

        loginButton4.setBackground(new java.awt.Color(255, 0, 51));
        loginButton4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        loginButton4.setForeground(new java.awt.Color(255, 255, 102));
        loginButton4.setText("<<Back");
        loginButton4.setBorder(null);
        loginButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButton4ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Available Funds Pool:");

        jLabel10.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Outstanding Funds:");

        processRequest1.setBackground(new java.awt.Color(255, 0, 51));
        processRequest1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        processRequest1.setForeground(new java.awt.Color(255, 255, 102));
        processRequest1.setText("Approve Request");
        processRequest1.setBorder(null);
        processRequest1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        processRequest1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processRequest1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(PanelLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                        .addComponent(loginButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelLayout.createSequentialGroup()
                                .addGap(260, 260, 260)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(processRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(PanelLayout.createSequentialGroup()
                                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(32, 32, 32)
                                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(processRequest1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginButton4))
                .addGap(18, 18, 18)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(processRequest1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(processRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 45, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void processRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processRequestActionPerformed
        // TODO add your handling code here:

        /*      String requestTypeChoice = RequestType.getSelectedItem().toString();

        if (requestTypeChoice.equalsIgnoreCase("Man Power Request")) {
            ManpowerRequestQueue requestQueue = userAccount.getManPowerQueue();
            ProcessManPowerRequest processManPowerRequest = new ProcessManPowerRequest(userProcessContainer, requestQueue);
            userProcessContainer.add("ProcessManPowerRequest", processManPowerRequest);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }

        if (requestTypeChoice.equalsIgnoreCase("Vaccine Request")) {
            VaccineWorkRequestQueue requestQueue = userAccount.getVacccineWorkRequestQueue();
        }*/
    }//GEN-LAST:event_processRequestActionPerformed

    private void loginButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButton4ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_loginButton4ActionPerformed

    private void processRequest1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processRequest1ActionPerformed
        // TODO add your handling code here:
        int selectedrow = DisplayTable.getSelectedRow();
        if (selectedrow < 0 || DisplayTable.getValueAt(selectedrow, 0).toString().equalsIgnoreCase("completed")) {
            JOptionPane.showMessageDialog(null, "Please make a valid selection!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (DisplayTable.getValueAt(selectedrow, 0).toString().equalsIgnoreCase("man power request")) {
            ManpowerRequest request = (ManpowerRequest) DisplayTable.getValueAt(selectedrow, 1);
            School s = (School) request.getSender().getEnterprize();
            s.setUnderOnlineTraining(true);
            request.setStatus("completed");
            populateManpowerRequest();
        } else {
            WorkRequest request = (WorkRequest) DisplayTable.getValueAt(selectedrow, 1);

            if (request.getFundRequested() > network.getTotal_funds()) {
                JOptionPane.showMessageDialog(null, "Sufficient funds not available!", "Warning", JOptionPane.ERROR_MESSAGE);
                return;
            }
            network.setTotal_funds(network.getTotal_funds() - request.getFundRequested());
            network.getEnterpriseDirectory().getEnterprizeList().stream()
                    .filter(x -> x instanceof School)
                    .forEach(x
                            -> {
                        for (UserAccount ua : x.getUserAccountDirectory().getUserAccount()) {
                            if (ua.getUsername().equals(request.getSender().getUsername())) {
                                System.out.println("Jai shri ram");
                                School s = (School) x;
                                if (request.getFundType().equalsIgnoreCase("infra funds")) {
                                    s.setInfraFunds(s.getInfraFunds() + request.getFundRequested());
                                    request.setFundAccepted(request.getFundRequested());
                                }
                                if (request.getFundType().equalsIgnoreCase("stationary funds")) {
                                    s.setStationaryFunds(s.getStationaryFunds() + request.getFundRequested());
                                    request.setFundAccepted(request.getFundRequested());
                                }
                                if (request.getFundType().equalsIgnoreCase("healthcare funds")) {
                                    s.setHealthFunds(s.getStationaryFunds() + request.getFundRequested());
                                    request.setFundAccepted(request.getFundRequested());
                                }
                                request.setGrantStatus("Completed");
                            }
                        }
                    });
            JOptionPane.showMessageDialog(null, "Successfully delivered funds!", "Success", JOptionPane.INFORMATION_MESSAGE);
            populateRequest();
        }

    }//GEN-LAST:event_processRequest1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if (jComboBox1.getSelectedIndex() == 0) {
            populateManpowerRequest();
        }
        if (jComboBox1.getSelectedIndex() == 1) {
            populateRequest();
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DisplayTable;
    private javax.swing.JPanel Panel;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton loginButton4;
    private javax.swing.JButton processRequest;
    private javax.swing.JButton processRequest1;
    // End of variables declaration//GEN-END:variables
}
